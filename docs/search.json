[
  {
    "objectID": "requirements.html",
    "href": "requirements.html",
    "title": "Requirements",
    "section": "",
    "text": "Bring your own laptop computer with R and RStudio installed.\nHave a basic understanding of R programming. If you need to brush up on your R skills, a hands-on R introductory tutorial will be made available for self-learning so that you can get familiarized with basic R before the course."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Overview",
    "section": "",
    "text": "In research, a significant amount of effort is spent cleaning data to get it ready for visualisation and analysis. This course will teach you how to convert your messy dataset into tidy data using R for easy data visual exploration and analysis.\nFor this, you will be introduced to the concept of tidy data, and guided through the programmatic steps in R required to structure datasets according to its principles. Additionally, we will show how tidy data works well together with graphical functions of the R package {ggplot2} thus facilitating initial exploration and analysis of the data. Finally, a “bring-your-own-data day” (optional day 3) will allow a smaller group of participants to obtain individual feedback and consulting on how to tidy up and visually inspect their own research datasets."
  },
  {
    "objectID": "about.html#programme",
    "href": "about.html#programme",
    "title": "Overview",
    "section": "Programme",
    "text": "Programme\n\nDay 1 | Introduction to data wrangling\n\nRaw and processed data\nComponents of tidy data\nMessy datasets\nConverting messy data to tidy data using tidyverse packages\nHands-on exercises.\n\n\n\nDay 2 | Visualising tidy data using ggplot2\n\nUnderstanding how tidy data translates to graphics’ aesthestics\nPlotting with one geom\nCombining several geoms\nTheming\nSaving graphs\nHands-on exercises.\n\n\n\nDay 3 | Bring your own data day\nIndividual consulting for data wrangling and visual exploration."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tidy Data & Visualisation in R",
    "section": "",
    "text": "The course consists of two days, and an extra optional day of consulting with students’ own data. In the first day you will learn the fundamental ideas behind tidy data and how to use Tidyverse functionality to turn your messy data into tidy data. In the second day you’ll learn how to use {ggplot2} functions to turn your tidy dataset into charts and figures.\nTo follow the course narrative browse the sections indicated on the left side bar of this website.\nThis training is designed to be an in-person course, but the course materials are provided for free, in the open, for the benefit of the community. If you use these materials please give the credit: DOIXXX CC BY SA."
  },
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "Setup",
    "section": "",
    "text": "Finally, ensure that you have the following packages installed by running:\ninstall.packages(c(\"tidyverse\", \"here\", \"readxl\", \"ggbeeswarm\"))\nYou can now move on to the next section."
  },
  {
    "objectID": "raw_data.html",
    "href": "raw_data.html",
    "title": "Raw data",
    "section": "",
    "text": "First acquaintances\nStart by loading the following required packages:\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(tools)\nlibrary(readxl)\n\nGet a variable with the path to the directory containing the raw data files:\n\ndata_raw_path <- here(\"data-raw\")\ndata_raw_path\n\n[1] \"/home/rmagno/sci/code/R/web/tdvr.oct.22/data-raw\"\n\n\nNote that the path up to data-raw/ is different from the one shown here. This is the job of the function here(): automatically determines the path of your data-raw directory.\nNow list the files in data-raw/:\n\nlist.files(data_raw_path)\n\n[1] \"quadrats.xlsx\"     \"rf_s_q1.csv\"       \"rf_s_q2.csv\"      \n[4] \"rf_w_q1.csv\"       \"rf_w_q2.csv\"       \"Ria de Alvor.xlsx\"\n\n\nThere are four CSV files (rf_s_q1.csv, rf_s_q2.csv, rf_w_q1.csv, rf_w_q2.csv) and two Excel files (quadrats.xlsx, Ria de Alvor.xlsx).\nThe CSV files contain data on the fiddler crabs sampled during the four field trips to Ria Formosa. The analogous data for Ria de Alvor is provided in the Excel file Ria de Alvor.xlsx.\nThe file quadrats.xlsx contains the area for each of quadrats defined in both Ria Formosa and Ria de Alvor.\nUse Excel to visually inspect the data in Ria de Alvor.xlsx, in one of the CSV files of your choice, and in quadrats.xlsx. Take some quick notes of:\n\nHow many data sets are there?\nWhat is the observational unit in each data set?\nWhat are the variables? Are the variable names used consistently across the data sets from Ria Formosa (CSV files) and Ria de Alvor (Ria de Alvor.xlsx)?\nBy looking at the values of the variables can you tell the type of variable? I.e., is it categorical/nominal, ordinal, binary, or continuous? Are there invalid or unexpected values?\n\n\nExercise 1.1\nCollect the previous commands into your R script.\n\n\nSolution to Exercise 1.1\nlibrary(tidyverse)\nlibrary(here)\nlibrary(tools)\nlibrary(readxl)\n\n# Define the path to the raw data\ndata_raw_path <- here(\"data-raw\")\n\n# List the raw data files\nlist.files(data_raw_path)\n\n\n\n\n\nProgrammatic acquaintances\nWe will now read the data into R, and try to answer the same questions but using R code. Here’s how you may read one of the CSV files using the read_csv() function:\n\nrf_s_q1 <- readr::read_csv(file.path(data_raw_path, \"rf_s_q1.csv\"))\n\nAnd here is how you read the quadrats.xlsx into R:\n\nquadrats01 <- readxl::read_excel(file.path(data_raw_path, \"quadrats.xlsx\"))\n\n\nExercise 1.2\nFollowing those examples can you read all six files into R?\n\n\nSolution to Exercise 1.2\n# Reading the four CSV files (Ria Formosa)\nrf_s_q1 <- readr::read_csv(file.path(data_raw_path, \"rf_s_q1.csv\"))\nrf_s_q2 <- readr::read_csv(file.path(data_raw_path, \"rf_s_q2.csv\"))\nrf_w_q1 <- readr::read_csv(file.path(data_raw_path, \"rf_w_q1.csv\"))\nrf_w_q2 <- readr::read_csv(file.path(data_raw_path, \"rf_w_q2.csv\"))\n\n# Reading now the four sheets inside of \"Ria de Alvor.xlsx\"\nra_path <- file.path(data_raw_path, \"Ria de Alvor.xlsx\")\nra_s_q1 <- readxl::read_excel(ra_path, sheet = \"summer-q1\")\nra_s_q2 <- readxl::read_excel(ra_path, sheet = \"summer-q2\")\nra_w_q1 <- readxl::read_excel(ra_path, sheet = \"winter-q1\")\nra_w_q2 <- readxl::read_excel(ra_path, sheet = \"winter-q2\")\n\n# Finally, reading the details about the quadrats\nquadrats01 <- readxl::read_excel(file.path(data_raw_path, \"quadrats.xlsx\"))\n\n\n\n\nExercise 1.3\nTo inspect the data just loaded into R we may try the following functions on those objects:\n\nView()\ndplyr::glimpse()\ncolnames()\nnrow() and ncol()\nhead() and tail()\nsummary() and table()\nunique()\n\nHere are a few examples.\nPrint each column as a row and indicate the column name, followed by its type, and the first values:\n\ndplyr::glimpse(rf_s_q1)\n\nRows: 1,243\nColumns: 12\n$ cl        <dbl> 21, 21, 15, 21, 19, 17, 19, 14, 19, 19, 17, 20, 22, 15, 17, …\n$ lcl       <dbl> 16, 13, 9, 16, 8, 7, 14, 13, 10, 12, 8, 16, 13, 9, 8, 19, 13…\n$ fw        <dbl> 15, 16, 10, 19, 14, 15, 15, 8, 11, 19, 8, 18, 15, 11, 13, 15…\n$ species   <chr> \"A. farensis\", \"A. farensis\", \"A. farensis\", \"A. farensis\", …\n$ longitude <dbl> -8.01873, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ is_gravid <lgl> FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE,…\n$ rcl       <dbl> 10, 15, 5, 14, 7, 6, 9, 5, 10, 12, 13, 15, 11, 10, 6, 16, 12…\n$ stage     <chr> \"juvenile\", \"juvenile\", \"juvenile\", \"juvenile\", \"juvenile\", …\n$ sex       <chr> \"?\", \"?\", \"female\", \"male or female\", \"female\", \"female\", \"f…\n$ id        <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1…\n$ cw        <dbl> 27, 27, 19, 26, 24, 22, 25, 18, 24, 24, 21, 25, 27, 19, 22, …\n$ latitude  <dbl> 37.02606, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n\n\nColumn names of the data frame rf_s_q1:\n\ncolnames(rf_s_q1)\n\n [1] \"cl\"        \"lcl\"       \"fw\"        \"species\"   \"longitude\" \"is_gravid\"\n [7] \"rcl\"       \"stage\"     \"sex\"       \"id\"        \"cw\"        \"latitude\" \n\n\nCreate a contingency table of the column stage:\n\ntable(rf_s_q1$stage)\n\n\n      adult    juvenile pre_puberty   sub_adult \n        439         188         212         404 \n\n\nShow me the unique values present in the sex column:\n\nunique(rf_s_q1$sex)\n\n[1] \"?\"              \"female\"         \"male or female\" NA              \n[5] \"-\"              \"N/R\"            \"male\"          \n\n\nWrite down the insights you gained about your data:\n\n\nSolution to Exercise 1.3\n# Insights gained:\n# - `region` and `season` are missing variables from the data sets pertaining\n#   Ria Formosa. They were indicating in the name of the CSV files. The \"rf\" and\n#   the \"s\" or \"w\", meant \"summer\" and \"winter, respectively. So we will need\n#   to add these two variables to `rf_s_q1`, `rf_s_q2`, `rf_w_q1` and `rf_w_q2`.\n# -"
  },
  {
    "objectID": "trainers.html",
    "href": "trainers.html",
    "title": "Trainers",
    "section": "",
    "text": "Ramiro Magno Isabel Duarte Bruno Louro João Brazão"
  },
  {
    "objectID": "data_visualisation.html",
    "href": "data_visualisation.html",
    "title": "Data visualisation",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  }
]